}
}
}
View(x)
x<-sort(x[,3])
x<- data.frame(with(q,subset(q,q[,2] == state)))
View(x)
x<-sort(x[,3],)
x
file <- read.csv("outcome-of-care-measures.csv",colClasses="character")
lst<-c("heart attack","heart failure","pneumonia")
v<-as.character()
state="TX"
outcome="heart failure"
num=4
if(!outcome %in% lst){
stop("invalid outcome")
}
if(!state %in% file$State){
stop("invalid state")
}  else{
if(outcome=="heart attack"){
q<-data.frame(file[,2],file[,7],file[,11])
x<- data.frame(with(q,subset(q,q[,2] == state)))
x<-x[order(x[,3]),]
if(num=="best"){
y<-which.min(apply(x,MARGIN = 1,min,na.rm=T))
z<-x[y,]
as.character(z[1,1])
}   else  if(num=="worst"){
y<-which.max(apply(x,MARGIN = 1,min,na.rm=T))
z<-x[y,]
as.character(z[1,1])
}else if(is.numeric(num)){
x[num,1]
}
} else if(outcome=="heart failure"){
q<-data.frame(file[,2],file[,7],file[,17])
x<- data.frame(with(q,subset(q,q[,2] == state)))
x<-x[order(as.numeric(x[,3])),]
x<-sort(x[,3],)
if(num=="best"){
y<-which.min(apply(x,MARGIN = 1,min,na.rm=T))
z<-x[y,]
as.character(z[1,1])
}else  if(num=="worst"){
y<-which.max(apply(x,MARGIN = 1,min,na.rm=T))
z<-x[y,]
as.character(z[1,1])
}else if(is.numeric(num)){
x[num,1]
}
}
else if(outcome=="pneumonia")
{
q<-data.frame(file[,2],file[,7],file[,23])
x<- data.frame(with(q,subset(q,q[,2] == state)))
x<-x[order(x[,3]),]
if(num=="best"){
y<-which.min(apply(x,MARGIN = 1,min,na.rm=T))
z<-x[y,]
as.character(z[1,1])
}else  if(num=="worst"){
y<-which.max(apply(x,MARGIN = 1,min,na.rm=T))
z<-x[y,]
as.character(z[1,1])
}else if(is.numeric(num)){
x[num,1]
}
}
}
}
file <- read.csv("outcome-of-care-measures.csv",colClasses="character")
lst<-c("heart attack","heart failure","pneumonia")
v<-as.character()
state="TX"
outcome="heart failure"
num=4
if(!outcome %in% lst){
stop("invalid outcome")
}
if(!state %in% file$State){
stop("invalid state")
}  else{
if(outcome=="heart attack"){
q<-data.frame(file[,2],file[,7],file[,11])
x<- data.frame(with(q,subset(q,q[,2] == state)))
x<-x[order(x[,3]),]
if(num=="best"){
y<-which.min(apply(x,MARGIN = 1,min,na.rm=T))
z<-x[y,]
as.character(z[1,1])
}   else  if(num=="worst"){
y<-which.max(apply(x,MARGIN = 1,min,na.rm=T))
z<-x[y,]
as.character(z[1,1])
}else if(is.numeric(num)){
x[num,1]
}
} else if(outcome=="heart failure"){
q<-data.frame(file[,2],file[,7],file[,17])
x<- data.frame(with(q,subset(q,q[,2] == state)))
x<-x[order(as.numeric(x[,3])),]
#       x<-sort(x[,3],)
if(num=="best"){
y<-which.min(apply(x,MARGIN = 1,min,na.rm=T))
z<-x[y,]
as.character(z[1,1])
}else  if(num=="worst"){
y<-which.max(apply(x,MARGIN = 1,min,na.rm=T))
z<-x[y,]
as.character(z[1,1])
}else if(is.numeric(num)){
x[num,1]
}
}
else if(outcome=="pneumonia")
{
q<-data.frame(file[,2],file[,7],file[,23])
x<- data.frame(with(q,subset(q,q[,2] == state)))
x<-x[order(x[,3]),]
if(num=="best"){
y<-which.min(apply(x,MARGIN = 1,min,na.rm=T))
z<-x[y,]
as.character(z[1,1])
}else  if(num=="worst"){
y<-which.max(apply(x,MARGIN = 1,min,na.rm=T))
z<-x[y,]
as.character(z[1,1])
}else if(is.numeric(num)){
x[num,1]
}
}
}
}
View(x)
x[,3]<-as.numeric(x[,3])
x<-x[order(x[,3]),]
#       x<-sort(x[,3],)
if(num=="best"){
y<-which.min(apply(x,MARGIN = 1,min,na.rm=T))
z<-x[y,]
as.character(z[1,1])
}else  if(num=="worst"){
y<-which.max(apply(x,MARGIN = 1,min,na.rm=T))
z<-x[y,]
as.character(z[1,1])
}else if(is.numeric(num)){
x[num,1]
}
}
file <- read.csv("outcome-of-care-measures.csv",colClasses="character")
lst<-c("heart attack","heart failure","pneumonia")
v<-as.character()
state="TX"
outcome="heart failure"
num=4
if(!outcome %in% lst){
stop("invalid outcome")
}
if(!state %in% file$State){
stop("invalid state")
}  else{
if(outcome=="heart attack"){
q<-data.frame(file[,2],file[,7],file[,11])
x<- data.frame(with(q,subset(q,q[,2] == state)))
x<-x[order(x[,3]),]
if(num=="best"){
y<-which.min(apply(x,MARGIN = 1,min,na.rm=T))
z<-x[y,]
as.character(z[1,1])
}   else  if(num=="worst"){
y<-which.max(apply(x,MARGIN = 1,min,na.rm=T))
z<-x[y,]
as.character(z[1,1])
}else if(is.numeric(num)){
x[num,1]
}
} else if(outcome=="heart failure"){
q<-data.frame(file[,2],file[,7],file[,17])
x<- data.frame(with(q,subset(q,q[,2] == state)))
x[,3]<-as.numeric(x[,3])
x<-x[order(x[,3]),]
#       x<-sort(x[,3],)
if(num=="best"){
y<-which.min(apply(x,MARGIN = 1,min,na.rm=T))
z<-x[y,]
as.character(z[1,1])
}else  if(num=="worst"){
y<-which.max(apply(x,MARGIN = 1,min,na.rm=T))
z<-x[y,]
as.character(z[1,1])
}else if(is.numeric(num)){
as.character(x[num,1])
}
}
else if(outcome=="pneumonia")
{
q<-data.frame(file[,2],file[,7],file[,23])
x<- data.frame(with(q,subset(q,q[,2] == state)))
x<-x[order(x[,3]),]
if(num=="best"){
y<-which.min(apply(x,MARGIN = 1,min,na.rm=T))
z<-x[y,]
as.character(z[1,1])
}else  if(num=="worst"){
y<-which.max(apply(x,MARGIN = 1,min,na.rm=T))
z<-x[y,]
as.character(z[1,1])
}else if(is.numeric(num)){
x[num,1]
}
}
}
View(x)
View(q)
View(q)
file <- read.csv("outcome-of-care-measures.csv",colClasses="character")
lst<-c("heart attack","heart failure","pneumonia")
v<-as.character()
state="TX"
outcome="heart failure"
num=4
if(!outcome %in% lst){
stop("invalid outcome")
}
if(!state %in% file$State){
stop("invalid state")
}  else{
if(outcome=="heart attack"){
q<-data.frame(file[,2],file[,7],file[,11])
x<- data.frame(with(q,subset(q,q[,2] == state)))
x<-x[order(x[,3]),]
if(num=="best"){
y<-which.min(apply(x,MARGIN = 1,min,na.rm=T))
z<-x[y,]
as.character(z[1,1])
}   else  if(num=="worst"){
y<-which.max(apply(x,MARGIN = 1,min,na.rm=T))
z<-x[y,]
as.character(z[1,1])
}else if(is.numeric(num)){
x[num,1]
}
} else if(outcome=="heart failure"){
q<-data.frame(file[,2],file[,7],file[,17])
x<- data.frame(with(q,subset(q,q[,2] == state)))
x[,3]<-as.double(x[,3])
x<-x[order(x[,3]),]
#       x<-sort(x[,3],)
if(num=="best"){
y<-which.min(apply(x,MARGIN = 1,min,na.rm=T))
z<-x[y,]
as.character(z[1,1])
}else  if(num=="worst"){
y<-which.max(apply(x,MARGIN = 1,min,na.rm=T))
z<-x[y,]
as.character(z[1,1])
}else if(is.numeric(num)){
as.character(x[num,1])
}
}
else if(outcome=="pneumonia")
{
q<-data.frame(file[,2],file[,7],file[,23])
x<- data.frame(with(q,subset(q,q[,2] == state)))
x<-x[order(x[,3]),]
if(num=="best"){
y<-which.min(apply(x,MARGIN = 1,min,na.rm=T))
z<-x[y,]
as.character(z[1,1])
}else  if(num=="worst"){
y<-which.max(apply(x,MARGIN = 1,min,na.rm=T))
z<-x[y,]
as.character(z[1,1])
}else if(is.numeric(num)){
x[num,1]
}
}
}
}
View(x)
View(q)
/factors()
?factors()
?factor()
x<-as.numeric(levels(x[,3]))[x]
x<-as.numeric(levels(x[,3]))
x<- data.frame(with(q,subset(q,q[,2] == state)))
x<-as.numeric(levels(x))
x<- data.frame(with(q,subset(q,q[,2] == state)))
x<-as.numeric(as.character(x))
outcomeCM<-read.csv("outcome-of-care-measures.csv",colClasses = "character") # if not using "colClass" option, death rate will be factor class and as.numberic() will get wrong data
stateName<-outcomeCM[,7] # the State column (no NAs)
outcomeCM<-read.csv("outcome-of-care-measures.csv",colClasses = "character") # if not using "colClass" option, death rate will be factor class and as.numberic() will get wrong data
stateName<-outcomeCM[,7] # the State column (no NAs)
stateNameUni<-unique(stateName[!is.na(stateName)])
state.Name.Order <- stateNameUni[order(stateNameUni)]
const <- list(outcome.Index=c("heart attack","heart failure","pneumonia"),
state=state.Name.Order,
dr.index=list(heart.attack=11,heart.failure=17,pneumonia=23),
num.index=c("best","worst")
)
if(!is.element(state,const$state)){
stop("invalid state")
}## Check that state and outcome are valid
if(!is.element(outcome,const$outcome)){
stop("invalid outcome")
}## Check that state and outcome are valid
state="TX"
outcome="heart failure"
num=4
outcomeCM<-read.csv("outcome-of-care-measures.csv",colClasses = "character") # if not using "colClass" option, death rate will be factor class and as.numberic() will get wrong data
stateName<-outcomeCM[,7] # the State column (no NAs)
stateNameUni<-unique(stateName[!is.na(stateName)])
state.Name.Order <- stateNameUni[order(stateNameUni)]
const <- list(outcome.Index=c("heart attack","heart failure","pneumonia"),
state=state.Name.Order,
dr.index=list(heart.attack=11,heart.failure=17,pneumonia=23),
num.index=c("best","worst")
)
if(!is.element(state,const$state)){
stop("invalid state")
}## Check that state and outcome are valid
if(!is.element(outcome,const$outcome)){
stop("invalid outcome")
}## Check that state and outcome are valid
const.Index <- which(const$outcome.Index==outcome)         # unifiy outcome and " death rate column" using index
dr <- suppressWarnings(as.numeric(outcomeCM[,const$dr.index[[const.Index]]]))
dr <- ifelse(rep(num==const$num.index[2],length(dr)),-dr,dr)  # reverse sorting so that no need to know lenthg of dr to get the worst hospital
num <- ifelse(is.numeric(num),num,1)                          # when num is numberic we keep it untouched, esle set num=1
orderHospitalAll<-outcomeCM[order(dr,outcomeCM[,2]),]
orderHospitalAll[orderHospitalAll$State==state,][,2][num]     #
v<-as.numeric(file[,11])
v<-file[,11]
file <- read.csv("outcome-of-care-measures.csv",colClasses="character")
lst<-c("heart attack","heart failure","pneumonia")
v<-as.numeric(file[,11])
v
w<-as.numeric(file[,17])
u<-as.numeric(file[,23])
state="TX"
outcome="heart failure"
num=4
if(!outcome %in% lst){
stop("invalid outcome")
}
if(!state %in% file$State){
stop("invalid state")
}  else{
if(outcome=="heart attack"){
q<-data.frame(file[,2],file[,7],v)
x<- data.frame(with(q,subset(q,q[,2] == state)))
x<-x[order(x[,3]),]
if(num=="best"){
y<-which.min(apply(x,MARGIN = 1,min,na.rm=T))
z<-x[y,]
as.character(z[1,1])
}   else  if(num=="worst"){
y<-which.max(apply(x,MARGIN = 1,min,na.rm=T))
z<-x[y,]
as.character(z[1,1])
}else if(is.numeric(num)){
x[num,1]
}
} else if(outcome=="heart failure"){
q<-data.frame(file[,2],file[,7],w)
x<- data.frame(with(q,subset(q,q[,2] == state)))
#       as.numeric(levels(f))[f]
x<-x[order(x[,3]),]
#       x<-sort(x[,3],)
if(num=="best"){
y<-which.min(apply(x,MARGIN = 1,min,na.rm=T))
z<-x[y,]
as.character(z[1,1])
}else  if(num=="worst"){
y<-which.max(apply(x,MARGIN = 1,min,na.rm=T))
z<-x[y,]
as.character(z[1,1])
}else if(is.numeric(num)){
as.character(x[num,1])
}
}
else if(outcome=="pneumonia")
{
q<-data.frame(file[,2],file[,7],u)
x<- data.frame(with(q,subset(q,q[,2] == state)))
x<-x[order(x[,3]),]
if(num=="best"){
y<-which.min(apply(x,MARGIN = 1,min,na.rm=T))
z<-x[y,]
as.character(z[1,1])
}else  if(num=="worst"){
y<-which.max(apply(x,MARGIN = 1,min,na.rm=T))
z<-x[y,]
as.character(z[1,1])
}else if(is.numeric(num)){
x[num,1]
}
}
}
View(x)
source('C:/Users/BlackFury/Downloads/rprog-data-ProgAssignment3-data/rankhospital.R')
rankhospital("MD", "heart attack", "worst")
source('C:/Users/BlackFury/Downloads/rprog-data-ProgAssignment3-data/rankhospital.R')
rankhospital("MD", "heart attack", "worst")
source('C:/Users/BlackFury/Downloads/rprog-data-ProgAssignment3-data/rankhospital.R')
rankhospital("MD", "heart attack", "worst")
rankhospital("TX", "heart failure", 4)
rankhospital("MN", "heart attack", 5000)
source("submitscript3.R")
rankhospital("NC", "heart attack", "worst")
source('C:/Users/BlackFury/Downloads/rprog-data-ProgAssignment3-data/submitscript3.R')
source('D:/files/thebrearer/Coursera/rankhospital.r')
rankhospital("NC", "heart attack", "worst")
source('D:/files/thebrearer/Coursera/rankhospital.r')
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
source('C:/Users/BlackFury/Downloads/rprog-data-ProgAssignment3-data/rankhospital.R')
rankhospital("WA", "heart attack", 7)
file <- read.csv("outcome-of-care-measures.csv",colClasses="character")
lst<-c("heart attack","heart failure","pneumonia")
v<-as.numeric(file[,11])
w<-as.numeric(file[,17])
u<-as.numeric(file[,23])
state="WA"
outcome="heart attack"
num=7
if(!outcome %in% lst){
stop("invalid outcome")
}
if(!state %in% file$State){
stop("invalid state")
}  else{
if(outcome=="heart attack"){
q<-data.frame(file[,2],file[,7],v)
x<- data.frame(with(q,subset(q,q[,2] == state)))
x<-x[order(x[,3]),]
if(num=="best"){
y<-which.min(apply(x,MARGIN = 1,min,na.rm=T))
z<-x[y,]
as.character(z[1,1])
}   else  if(num=="worst"){
y<-which.max(apply(x,MARGIN = 1,min,na.rm=T))
z<-x[y,]
as.character(z[1,1])
}else if(is.numeric(num)){
as.character(x[num-1,1])
}
} else if(outcome=="heart failure"){
q<-data.frame(file[,2],file[,7],w)
x<- data.frame(with(q,subset(q,q[,2] == state)))
#       as.numeric(levels(f))[f]
x<-x[order(x[,3]),]
#       x<-sort(x[,3],)
if(num=="best"){
y<-which.min(apply(x,MARGIN = 1,min,na.rm=T))
z<-x[y,]
as.character(z[1,1])
}else  if(num=="worst"){
y<-which.max(apply(x,MARGIN = 1,min,na.rm=T))
z<-x[y,]
as.character(z[1,1])
}else if(is.numeric(num)){
as.character(x[num-1,1])
}
}  else if(outcome=="pneumonia")
{
q<-data.frame(file[,2],file[,7],u)
x<- data.frame(with(q,subset(q,q[,2] == state)))
x<-x[order(x[,3]),]
if(num=="best"){
y<-which.min(apply(x,MARGIN = 1,min,na.rm=T))
z<-x[y,]
as.character(z[1,1])
}else  if(num=="worst"){
y<-which.max(apply(x,MARGIN = 1,min,na.rm=T))
z<-x[y,]
as.character(z[1,1])
}else if(is.numeric(num)){
as.character(x[num-1,1])
}
}
}
}
View(x)
rankhospital("WA", "pneumonia", 1000)
source('C:/Users/BlackFury/Downloads/rprog-data-ProgAssignment3-data/rankhospital.R')
rankhospital("WA", "pneumonia", 1000)
rankhospital("NY", "heart attak", 7)
source('C:/Users/BlackFury/Downloads/rprog-data-ProgAssignment3-data/submitscript3.R')
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
source('D:/files/thebrearer/Coursera/rankall.r')
submit()
submit()
submit()
rankall("heart failure", 10)
submit()
submit()
source('C:/Users/BlackFury/Downloads/rprog-data-ProgAssignment3-data/submitscript3.R')
submit()
submit()
submit()
submit()
